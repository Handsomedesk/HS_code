<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create User</title>
  <link rel="stylesheet" href="/createuser.css">
  <style>
    .error {
      color: red;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>회원가입</h1>
    <form action="/createuser" method="post" id="createUserForm">
      <table>
        <tr>
          <td>사용자 ID:</td>
          <td><input type="text" name="login_id" id="login_id" required></td>
        </tr>
        <tr>
          <td>닉네임:</td>
          <td><input type="text" name="nick_name" id="nick_name" required></td>
        </tr>
        <tr>
          <td>비밀번호:</td>
          <td><input type="password" name="password" id="password" required></td>
        </tr>
        <tr>
          <td>비밀번호 확인:</td>
          <td><input type="password" name="confirm_password" id="confirm_password" required></td>
        </tr>
        <tr>
          <td>자기소개:</td>
          <td><input type="text" name="user_intro" id="user_intro"></td>
        </tr>
        <!-- <tr>
          <td>비밀번호 찾기 힌트:</td>
          <td><input type="text" name="pw_find" id="pw_find"></td>
        </tr> -->
        <tr>
          <td>이메일:</td>
          <td>
            <input type="email" name="email" id="email">
            <span id="verificationMessage"></span>
            <button type="button" id="sendVerificationCodeButton">인증 코드 전송</button>
            <input type="text" id="verificationCode" placeholder="인증 코드 입력">
            <button type="button" id="verifyCodeButton">인증 코드 확인</button>
          </td>
        </tr>
        <tr>
          <td colspan="2" class="join">
            <button type="submit" class="btn">회원가입 완료</button>
          </td>
        </tr>
      </table>
    </form>
  </div>

  <script>
    function saveToLocalStorage() {
      const fields = ['login_id', 'nick_name', 'password', 'confirm_password', 'user_intro', 'pw_find', 'email', 'isEmailVerified'];
      fields.forEach(field => {
        const element = document.getElementById(field);
        if (element) {
          const value = element.value;
          localStorage.setItem(field, value);
        } else if (field === 'isEmailVerified') {
          const value = document.getElementById('email').hasAttribute('readonly');
          localStorage.setItem(field, value);
        }
      });
    }

    function loadFromLocalStorage() {
      const fields = ['login_id', 'nick_name', 'password', 'confirm_password', 'user_intro', 'pw_find', 'email'];
      fields.forEach(field => {
        const value = localStorage.getItem(field);
        if (value) {
          document.getElementById(field).value = value;
        }
      });
      const isEmailVerified = localStorage.getItem('isEmailVerified') === 'true';
      if (isEmailVerified) {
        document.getElementById('email').setAttribute('readonly', 'readonly');
        document.getElementById('sendVerificationCodeButton').style.display = 'none';
        document.getElementById('verifyCodeButton').style.display = 'none';
        document.getElementById('verificationCode').style.display = 'none';
        const span = document.getElementById('verificationMessage');
        span.innerText = '인증이 완료되었습니다.';
      }
    } 

    document.getElementById('sendVerificationCodeButton').addEventListener('click', function() {
      const email = document.getElementById('email').value;
      console.log("인증 코드 전송 요청:", email);

      saveToLocalStorage();
      localStorage.setItem('email', email);

      fetch('/send-verification-code', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ email: email })
      })
      .then(response => response.json())
      .then(data => {
        console.log("서버 응답:", data);
        alert(data.message);
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });

    document.getElementById('verifyCodeButton').addEventListener('click', function(event) {
      event.preventDefault();
      const code = document.getElementById('verificationCode').value;
      console.log("인증 코드 확인 요청:", code);

      fetch('/verify-code', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ code: code })
      })
      .then(response => response.json())
      .then(data => {
        console.log("서버 응답:", data);
        if (data.message === '이메일 인증이 완료되었습니다.') {
          alert(data.message);
          document.getElementById('sendVerificationCodeButton').style.display = 'none';
          document.getElementById('verifyCodeButton').style.display = 'none';
          document.getElementById('verificationCode').style.display = 'none';
          document.getElementById('email').setAttribute('readonly', 'readonly');
          const span = document.getElementById('verificationMessage');
          span.innerText = '인증이 완료되었습니다.';
          localStorage.setItem('isEmailVerified', true);
          saveToLocalStorage();
        } else {
          alert(data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });

    document.addEventListener('DOMContentLoaded', function() {
      loadFromLocalStorage();
    });

    document.getElementById('createUserForm').addEventListener('submit', function() {
      localStorage.clear();
    });
  </script>
</body>
</html>
